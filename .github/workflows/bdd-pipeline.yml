name: Pipeline BDD y Performance

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-bdd:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Instalar Chrome
      uses: browser-actions/setup-chrome@latest
    
    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install webdriver-manager
    
    - name: Ejecutar pruebas BDD
      run: |
        behave features/ \
          --format allure_behave.formatter:AllureFormatter \
          -o reports/allure-results \
          --format html \
          -o reports/behave-report.html
      env:
        HEADLESS: true
    
    - name: Generar reporte Allure
      if: always()
      run: |
        npm install -g allure-commandline
        allure generate reports/allure-results -o reports/allure-report --clean
    
    - name: Subir reportes
      if: always()
      uses: actions/upload-artifact@v5
      with:
        name: test-reports
        path: reports/
    
    - name: Publicar resultados en PR
      if: github.event_name == 'pull_request'
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: reports/behave-report.html
        check_name: Resultados BDD
        comment_title: Resultados de Pruebas BDD

  test-performance:
    runs-on: ubuntu-latest
    needs: test-bdd
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Instalar Locust
      run: |
        python -m pip install --upgrade pip
        pip install locust
    
    - name: Ejecutar pruebas de performance
      run: |
        locust -f tests/performance/locustfile.py \
          --headless \
          --users 10 \
          --spawn-rate 2 \
          --run-time 60s \
          --host http://localhost:8080 \
          --html reports/performance-report.html \
          --csv reports/performance
    
    - name: Analizar m√©tricas de performance
      run: python scripts/analyze_performance.py
    
    - name: Subir reporte de performance
      if: always()
      uses: actions/upload-artifact@v5
      with:
        name: performance-reports
        path: reports/performance*

  quality-gates:
    runs-on: ubuntu-latest
    needs: [test-bdd, test-performance]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Descargar reportes
      uses: actions/download-artifact@v5
      with:
        name: test-reports
        path: reports/
    
    - name: Verificar umbrales de calidad
      run: |
        python scripts/check_quality_gates.py
    
    - name: Notificar resultados
      if: failure()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: 'Las pruebas no cumplieron con los umbrales de calidad'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
